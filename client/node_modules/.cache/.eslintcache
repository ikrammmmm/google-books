[{"/Users/jasimsharook/Desktop/freelancer/google-books/client/src/index.js":"1","/Users/jasimsharook/Desktop/freelancer/google-books/client/src/reportWebVitals.js":"2","/Users/jasimsharook/Desktop/freelancer/google-books/client/src/App.js":"3","/Users/jasimsharook/Desktop/freelancer/google-books/client/src/templates/header.js":"4","/Users/jasimsharook/Desktop/freelancer/google-books/client/src/pages/home.js":"5","/Users/jasimsharook/Desktop/freelancer/google-books/client/src/pages/saved.js":"6","/Users/jasimsharook/Desktop/freelancer/google-books/client/src/templates/bookcard.js":"7","/Users/jasimsharook/Desktop/freelancer/google-books/client/src/helpers/api_helper.js":"8"},{"size":500,"mtime":1622989388453,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1622989388454,"results":"11","hashOfConfig":"10"},{"size":502,"mtime":1623085655111,"results":"12","hashOfConfig":"10"},{"size":893,"mtime":1623085319634,"results":"13","hashOfConfig":"10"},{"size":4298,"mtime":1623094118373,"results":"14","hashOfConfig":"10"},{"size":1911,"mtime":1623094320848,"results":"15","hashOfConfig":"10"},{"size":2418,"mtime":1623092263858,"results":"16","hashOfConfig":"10"},{"size":624,"mtime":1623128689474,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"125ijdi",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jasimsharook/Desktop/freelancer/google-books/client/src/index.js",[],"/Users/jasimsharook/Desktop/freelancer/google-books/client/src/reportWebVitals.js",[],"/Users/jasimsharook/Desktop/freelancer/google-books/client/src/App.js",[],"/Users/jasimsharook/Desktop/freelancer/google-books/client/src/templates/header.js",["37"],"import React,{Component}  from 'react';\n\n\nexport default class Header extends Component {\n  \n    render()\n    {\n        return (\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a class=\"navbar-brand\" href=\"#\">Google Books Saver</a>\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n              <div class=\"navbar-nav\">\n                <a class=\"nav-item nav-link \" href=\"/\">Search </a>\n                <a class=\"nav-item nav-link\" href=\"/saved\">Saved Books</a>\n            \n              </div>\n            </div>\n          </nav>\n        )\n    }\n}","/Users/jasimsharook/Desktop/freelancer/google-books/client/src/pages/home.js",[],"/Users/jasimsharook/Desktop/freelancer/google-books/client/src/pages/saved.js",["38"],"import React,{Component}  from 'react';\nimport {getSavedBooks} from \"../helpers/api_helper\"\nimport Bookcard from \"../templates/bookcard\"\n\nexport default class Home extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state= {\n            books : [],\n            isEmpty : true,\n        }\n    }\n    componentDidMount() {\n        getSavedBooks()\n        .then(data =>{\n            this.setState({books : data.data})\n            if(data.data.length>0)  this.setState({isEmpty : false})\n              \n        })\n    }\n     deleteBook = (book_id)=>\n    {\n        var books = this.state.books;\n       var newbooks = books.filter(function(book){ \n            return book_id != book.book_id;\n        });\n    \n        this.setState({books : newbooks})\n        if(newbooks.length>0)  this.setState({isEmpty : false})\n        else this.setState({isEmpty : true})\n    }\n    \n    render()\n    {\n        var  {isEmpty,books} = this.state;\n        return (\n          <div className=\"container mt-4\">\n              <div className=\"row  d-flex justify-content-center\">\n                    <div className=\"col \">\n                        <center><h1>Google Book Search</h1></center>\n                    </div>\n              </div>\n              <div className=\"row  d-flex justify-content-center mt-4\">\n\n              {isEmpty ? (\n                   <center>No Books Found</center>\n                    \n                ) : (\n                    \n                    books.map( (book,index) =>{\n                        \n                        \n                        \n                        return (\n                            <Bookcard key={index} book={book} saved={true} deleteBook={this.deleteBook}/>\n                    )\n                    })\n                        \n                        \n                )}\n                    </div>\n\n             \n          </div>\n        )\n    }\n}","/Users/jasimsharook/Desktop/freelancer/google-books/client/src/templates/bookcard.js",["39","40","41","42"],"import React,{Component}  from 'react';\nimport {saveBook,deleteBook} from \"../helpers/api_helper\"\n\n\nexport default class Bookcard extends Component {\n    Addtofav = async (book) =>\n    {\n     \n        var data = await saveBook(book)\n        data = data.data\n        if(data.error)\n        {\n            alert(data.message);\n        }\n        else{\n            alert(data.message);\n        }\n    }\n    delete = async (book) =>\n    {\n        var id = book._id;\n        var data = await deleteBook(id)\n        data = data.data\n        if(!data.error)\n        {\n            this.props.deleteBook(book.book_id)\n            alert(data.message);\n        }\n        else{\n            alert(data.message);\n        }\n    }\n    render()\n    {\n        var book = this.props.book\n        var btn_class = \"btn-success\";\n        var btn_text   = \"Save Book\"\n        if(this.props.saved) {\n            btn_class = \"btn-danger\";\n            btn_text   = \"Remove\"\n        }\n        var image = \"\";\n        var authorsObject = book.authors;\n        var authors = \"\"\n        var link = book.link ? book.link : \"#\";\n        var description = book.description ? book.description.substring(0, 80) : '' ;\n        if(authorsObject)\n        {  \n            authorsObject.map((author,index) =>{\n                if(index ==2) authors += \", \"\n                authors += author;\n                })\n        }\n        if(book.image){} image = book.image;\n        return (\n            <div className=\"col col-md-4 card m-1\" >\n                <img className=\"card-img-top img-thumbnail\" src={image}  alt=\"Card image cap\"/>\n                <div class=\"card-body\">\n                    <h5 className=\"card-title\">{book.title}</h5>\n                    <p className=\"card-text\">Auhtors : {authors}</p>\n                    <p className=\"card-text\">Publisher : {book.publisher}</p>\n                    <p className=\"card-text\">Published Year : {book.publishedDate}</p>\n                    <p className=\"card-text\" title={book.description}>Description : {description}</p>\n                    <div className=\"card-buton-row\">\n                        <a  href={link}  className=\"btn btn-primary\">View Book</a>\n                        <a className={\"btn  float-right \"+btn_class} onClick={ this.props.saved ? () => this.delete(book) :  () => this.Addtofav(book)}>{btn_text}</a>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","/Users/jasimsharook/Desktop/freelancer/google-books/client/src/helpers/api_helper.js",["43"],{"ruleId":"44","severity":1,"message":"45","line":10,"column":13,"nodeType":"46","endLine":10,"endColumn":46},{"ruleId":"47","severity":1,"message":"48","line":26,"column":28,"nodeType":"49","messageId":"50","endLine":26,"endColumn":30},{"ruleId":"51","severity":1,"message":"52","line":49,"column":46,"nodeType":"53","messageId":"54","endLine":49,"endColumn":48},{"ruleId":"47","severity":1,"message":"55","line":50,"column":26,"nodeType":"49","messageId":"50","endLine":50,"endColumn":28},{"ruleId":"56","severity":1,"message":"57","line":57,"column":17,"nodeType":"46","endLine":57,"endColumn":96},{"ruleId":"44","severity":1,"message":"58","line":66,"column":25,"nodeType":"46","endLine":66,"endColumn":153},{"ruleId":"59","severity":1,"message":"60","line":4,"column":5,"nodeType":"61","messageId":"62","endLine":4,"endColumn":12},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '===' and instead saw '=='.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'appPort' is assigned a value but never used.","Identifier","unusedVar"]